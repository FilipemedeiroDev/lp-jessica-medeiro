---
const isBaseUrl =
  Astro.url.pathname === "/" || Astro.url.pathname.startsWith("/#");
---

<script>
  const setupMenu = () => {
    const header = document.querySelector("header");
    const logo = document.querySelector(".logo");
    const menuToggle = document.querySelector(".menu-toggle");
    const navLinks = document.querySelector(".nav-links");
    const closeMenu = document.querySelector(".close-menu");

    // Inicialmente, certifique-se que o body não esteja com overflow escondido
    document.body.style.overflow = "auto";

    // Função para alterar o cabeçalho ao rolar
    const updateHeaderOnScroll = () => {
      if (window.scrollY > 0) {
        header.classList.add("scroll");
        logo.setAttribute("src", "/images/logo-light.png");
      } else {
        header.classList.remove("scroll");
        logo.setAttribute("src", "/images/logo-dark.png");
      }
    };

    // Inicializa os eventos de rolagem
    window.addEventListener("scroll", updateHeaderOnScroll);
    updateHeaderOnScroll(); // Atualiza na carga inicial

    // Função para abrir ou fechar o menu
    const toggleMenu = () => {
      navLinks.classList.toggle("open");
      // Bloqueia o scroll ao abrir o menu
      if (navLinks.classList.contains("open")) {
        document.body.style.overflow = "hidden";
        console.log("Scroll bloqueado");
      } else {
        document.body.style.overflow = "auto";
      }
    };

    // Função para fechar o menu
    const closeMenuFunction = () => {
      navLinks.classList.remove("open");
      document.body.style.overflow = "auto"; // Sempre libera o scroll ao fechar
    };

    // Adiciona evento para abrir o menu
    menuToggle.addEventListener("click", toggleMenu);
    // Adiciona evento para fechar o menu
    closeMenu.addEventListener("click", closeMenuFunction);

    // Fecha o menu ao clicar fora dele
    document.addEventListener("click", (event) => {
      const targetEvent = event.target as HTMLElement;
      const isClickOutside =
        !navLinks.contains(targetEvent) && !menuToggle.contains(targetEvent);
      if (isClickOutside && navLinks.classList.contains("open")) {
        closeMenuFunction();
      }
    });

    // Rolagem suave para âncoras
    const setupSmoothScroll = () => {
      const isBaseUrl =
        window.location.pathname === "/" ||
        window.location.pathname.startsWith("/#");

      // Adiciona o evento de clique em todos os links dentro de ".nav-links"
      document.querySelectorAll(".nav-links li a").forEach((link) => {
        link.addEventListener("click", (event) => {
          console.log("cliquei");
          // Se o link for uma ancora (hash link), faz o scroll suave
          if (link.getAttribute("href").startsWith("#")) {
            event.preventDefault();
            const targetId = link.getAttribute("href").substring(1);
            const targetSection = document.getElementById(targetId);

            if (targetSection) {
              const headerOffset = header.offsetHeight;
              const elementPosition = targetSection.offsetTop;
              const offsetPosition = elementPosition - headerOffset;

              window.scrollTo({
                top: offsetPosition,
                behavior: "smooth",
              });

              closeMenuFunction();
            }
          }

          // Fecha o menu após qualquer clique
          closeMenuFunction();
        });
      });
    };

    setupSmoothScroll();
  };

  const initializeHeader = () => {
    setupMenu(); // Configura o menu
  };

  // Reaplica os eventos após uma troca de página no Astro
  document.addEventListener("astro:page-load", initializeHeader);
</script>

<header>
  <div class="content-header">
    <a href="/">
      <img src="/images/logo-dark.png" alt="Logo" class="logo" />
    </a>
    <div class="menu-toggle">&#9776;</div>

    {
      isBaseUrl && (
        <ul class="nav-links">
          <span class="close-menu">&times;</span>
          <li>
            <a href="#inicio">Inicio</a>
          </li>
          <li>
            <a href="#sobre">Sobre</a>
          </li>
          <li>
            <a href="#porque">Por que fazer extensão?</a>
          </li>
          <li>
            <a href="#procedimentos">Procedimentos</a>
          </li>
        </ul>
      )
    }
    {
      !isBaseUrl && (
        <ul class="nav-links">
          <span class="close-menu">&times;</span>
          <li>
            <a href="/">&#8592; Voltar ao início</a>
          </li>
          <li class="dropdown">
            <a>Procedimentos &#9662;</a>
            <ul class="submenu">
              <li>
                <a href="/extensaodecilios">Extensão de cílios</a>
              </li>
              <li>
                <a href="/designsobrancelhas" class="sobrancelhas">
                  Design de Sobrancelha
                </a>
              </li>
            </ul>
          </li>
        </ul>
      )
    }
  </div>
</header>

<style>
  /* Header */
  header {
    position: fixed;
    top: 0;
    width: 100%;
    height: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 50;
    transition:
      background-color 0.3s ease,
      box-shadow 0.3s ease-in-out;
  }

  .no-scroll {
    overflow: hidden;
  }
  .scroll {
    background-color: #f96391;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  }

  .content-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    max-width: 1200px;
    padding: 0 20px;
  }

  .logo {
    width: 150px;
    height: 150px;
  }

  .nav-links {
    display: flex;
    list-style: none;
    gap: 2rem;
  }

  .nav-links li a {
    font-size: 22px;
    color: #fff;
    text-decoration: none;
  }

  .nav-links li a:hover {
    color: #e1245e;
  }

  .dropdown {
    position: relative;
  }
  .nav-links .dropdown .submenu {
    display: none;
    width: 100%;
    position: absolute;
    top: 100%;
    left: -34px;
    background-color: #333;
    padding: 0;
    list-style: none;
    min-width: 250px;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    cursor: pointer;
  }

  .nav-links .dropdown .submenu li a {
    width: 100%;
  }

  .submenu li a {
    display: block;
    padding: 10px;
    color: #fff;
    text-decoration: none;
    font-size: 18px;
  }

  .submenu li:hover {
    background-color: #444;
  }
  .submenu li a:hover {
    color: #e1245e;
  }

  .nav-links .dropdown:hover .submenu {
    display: block;
  }

  /* Mobile Menu */
  .menu-toggle {
    display: none;
    font-size: 28px;
    color: #fff;
    cursor: pointer;
  }

  .nav-links {
    transition: transform 0.3s ease;
  }

  .close-menu {
    display: none;
  }

  /* Responsive for Mobile */
  @media (max-width: 1024px) {
    .menu-toggle {
      display: block;
    }

    .nav-links {
      position: fixed;
      top: 0;
      right: 0;
      width: 80%;
      height: 100%;
      background-color: #161515;
      flex-direction: column;
      align-items: center;
      gap: 1.5rem;
      padding-top: 80px;
      transform: translateX(100%);
      box-shadow: 0px 4px 4px rgba(255, 255, 255, 0.438);
    }

    .nav-links.open {
      transform: translateX(0);
    }

    .content-header {
      justify-content: space-between;
      padding-inline: 40px;
    }

    .logo {
      width: 120px;
      height: 120px;
    }

    /* Close Button Styles */
    .close-menu {
      position: absolute;
      top: 0;
      right: 30px;
      font-size: 56px;
      color: #fff;
      cursor: pointer;
      display: block;
    }
  }
</style>
